------------------------------------What is OOP?------------------------------------
OOP stands for Object-Oriented Programming.
provides many concepts such as inheritance, data binding, polymorphism etc.
object-oriented programming is about creating objects that contain both data and functions.

------------------------------------Object-oriented programming has several advantages-----------------------------------
OOP is faster and easier to execute
OOP provides a clear structure for the programs
OOP helps to keep  code easier to maintain, modify and debug
OOP makes it possible to create full reusable applications with less code and shorter development time

-----------------------------------What are Classes and Objects?-----------------------------------
Classes:
Classes and objects are the two main aspects of object-oriented programming.
A class is a user-defined data type that we can use in our program, 
and it works as an object constructor, or a "blueprint" for creating objects.
Exmple:
class MyClass {       // The class
  public:             // Access specifier
    int myNum;        // Attribute (int variable)
    string myString;  // Attribute (string variable)
};

Objects:
object is created from a class
Example:
class MyClass {       // The class
  public:             // Access specifier
    int myNum;        // Attribute (int variable)
    string myString;  // Attribute (string variable)
};

int main() {
  MyClass myObj;  // Create an object of MyClass
  // Access attributes and set values
  myObj.myNum = 15; 
  myObj.myString = "Some text";
  // Print attribute values
  cout << myObj.myNum << "\n";
  cout << myObj.myString;
  return 0;
}
